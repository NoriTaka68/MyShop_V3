Rapport Détaillé de l'Application MyShop
Introduction

MyShop est une application de commerce en ligne construite avec Django et Django Rest Framework, offrant une plateforme pour parcourir, ajouter au panier, et acheter des produits. Ce rapport détaille les aspects techniques de l'application, y compris sa conception, ses fonctionnalités, ses mécanismes de sécurité, et son processus de déploiement.
Conception et Modélisation des Données
Modèles

    User (Hérité de AbstractUser de Django) : Ajout d'un champ phone_number et d'un indicateur is_superuser pour distinguer les utilisateurs normaux des administrateurs.
    Product : Chaque produit possède des attributs tels que name, description, price, available, et image. L'attribut image utilise ImageField, stockant les images dans le sous-répertoire product_images/ du répertoire de médias.
    Category : Permet de classer les produits. Une relation plusieurs-à-plusieurs entre Product et Category permet d'associer un produit à plusieurs catégories.
    Cart : Associé à un utilisateur via une relation un-à-un. Contient des produits à travers des instances de CartItem.
    CartItem : Représente des articles dans un panier, avec quantity pour chaque Product.

Relations

    User ↔ Cart : Relation un-à-un permettant à chaque utilisateur d'avoir un panier unique.
    Product ↔ Category : Relation plusieurs-à-plusieurs pour classer les produits dans différentes catégories.
    Cart ↔ Product : Relation plusieurs-à-plusieurs réalisée par le modèle intermédiaire CartItem.

API REST et Endpoints:

Les endpoints de l'API suivent les principes REST, permettant de créer, lire, mettre à jour, et supprimer des ressources via des requêtes HTTP.

>Endpoints Clés:

    /api/users/ : Gestion des utilisateurs, incluant l'inscription, la mise à jour des profils, et la visualisation des informations utilisateur.
    /api/products/ : Permet aux utilisateurs de parcourir et de rechercher des produits. Les superutilisateurs peuvent ajouter, modifier, ou supprimer des produits.
    /api/categories/ : Gestion des catégories de produits.
    /api/cart/ : Visualisation et gestion du panier d'achats, y compris l'ajout et la suppression de produits.
    /api/cart/add/ : Endpoint pour ajouter un produit au panier.
    /api/cart/update/ : Mise à jour des quantités d'un article dans le panier.
    /api/cart/remove/<cart_item_id>/ : Suppression d'un article du panier.

Authentification et Sécurité
Authentification

Utilise l'authentification par token JWT pour sécuriser l'accès aux endpoints de l'API. Les tokens sont générés lors de la connexion et doivent être inclus dans les en-têtes des requêtes HTTP pour accéder aux ressources protégées.
Permissions

    Permissions Générales : Seuls les utilisateurs authentifiés peuvent accéder à la majorité des endpoints.
    Permissions Spécifiques aux Superutilisateurs : Les actions de gestion (ajout/modification/suppression) sur les produits et les utilisateurs sont restreintes aux superutilisateurs.